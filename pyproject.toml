[project]
name = "boiler-plate"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "email-validator>=2.2.0",
    "fastapi[standard]>=0.115.14",
    "firebase-admin>=6.9.0",
    "google-cloud-bigquery>=3.34.0",
    "pydantic-settings>=2.10.1",
    "redis>=6.2.0",
    "langchain-core==0.3.65",
    "langchain-openai==0.3.19",
    "langgraph==0.4.8",
    "langgraph-api==0.2.54",
    "langchain-text-splitters==0.3.8",
    "langgraph-checkpoint==2.0.26",
    "langgraph-checkpoint-redis",
    "langfuse==3.2.4",
    "langchain",
    "pytz",
    "langchain-community",
    "faiss-cpu==1.11.0.post1",
    "numpy==2.2.6",
    "xhtml2pdf",
    "psycopg2"


]

[tool.uv]
dev-dependencies = [
    "coverage>=7.9.1",
    "mypy>=1.16.1",
    "pre-commit>=4.2.0",
    "pytest>=8.4.1",
    "ruff>=0.12.1",
]

#[build-system]
#requires = ["hatchling"]
#build-backend = "hatchling.build"

[tool.mypy]
strict=true
exclude=["venv", ".venv"]

[tool.ruff]
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true
